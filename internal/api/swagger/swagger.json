{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/messages": {
            "get": {
                "description": "Returns a paginated list of sent messages",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "List sent messages",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Max number of records",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Message"
                            }
                        }
                    },
                    "500": {
                        "description": "db error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new message to be sent by the scheduler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Create a message",
                "parameters": [
                    {
                        "description": "Create message payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createMessageReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Message"
                        }
                    },
                    "400": {
                        "description": "invalid json or validation error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/scheduler/start": {
            "post": {
                "description": "Starts the background scheduler that sends messages",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Scheduler"
                ],
                "summary": "Start scheduler",
                "responses": {
                    "200": {
                        "description": "scheduler started",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/scheduler/stop": {
            "post": {
                "description": "Stops the background scheduler",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Scheduler"
                ],
                "summary": "Stop scheduler",
                "responses": {
                    "200": {
                        "description": "scheduler stopped",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "description": "Returns OK if the service is healthy",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.createMessageReq": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "model.Message": {
            "type": "object",
            "properties": {
                "attempt_count": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_error": {
                    "type": "string"
                },
                "provider_message_id": {
                    "type": "string"
                },
                "sent_at": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.Status"
                },
                "to": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Status": {
            "type": "string",
            "enum": [
                "unsent",
                "sent"
            ],
            "x-enum-varnames": [
                "StatusUnsent",
                "StatusSent"
            ]
        }
    }
}